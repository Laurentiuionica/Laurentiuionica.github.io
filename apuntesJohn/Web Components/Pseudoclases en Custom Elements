# üåà **Gu√≠a Completa de Pseudoclases en Custom Elements (Shadow DOM)** üé®

## üèóÔ∏è **Pseudoclases Esenciales para Styling en Web Components**

### 1Ô∏è‚É£ **`:host` - El Anfitri√≥n del Shadow DOM**
```css
:host {
  display: block;       /* ¬°OJO! Por defecto son inline */
  border: 2px solid #3a7bd5;
  padding: 15px;
  background: #f0f8ff;
}
```
**üìå Qu√© hace:**  
- Estiliza **el elemento contenedor** del Shadow DOM (el custom element en s√≠)  
- ‚ö†Ô∏è Por defecto los custom elements son `inline` (c√°mbialo a `block`/`inline-block` seg√∫n necesites)  

**üí° Caso de uso:**  
```html
<mi-tarjeta></mi-tarjeta>  <!-- Este es el :host -->
```

---

### 2Ô∏è‚É£ **`:host()` - Selector Condicional Avanzado**  
```css
:host([disabled]) {
  opacity: 0.6;
  pointer-events: none;
  background: #e0e0e0;
}

:host(.premium) button {
  background: gold;
}
```
**üéØ Funcionamiento:**  
- Filtra el host **basado en atributos o clases**  
- Similar a `:host` pero con especificidad aumentada  

**Ejemplo pr√°ctico:**  
```html
<mi-boton disabled></mi-boton>  <!-- Aplica estilos de [disabled] -->
<mi-boton class="premium"></mi-boton>  <!-- Aplica estilos .premium -->
```

---

### 3Ô∏è‚É£ **`:host-context()` - Estilos Contextuales**  
```css
:host-context(.dark-mode) {
  background: #333;
  color: white;
}

:host-context(article.card) {
  border-radius: 8px;
}
```
**üåê Qu√© logra:**  
- Aplica estilos **seg√∫n el contexto del padre** en el DOM light  
- √ötil para temas globales o contenedores espec√≠ficos  

**Ejemplo:**  
```html
<body class="dark-mode">
  <mi-componente></mi-componente> <!-- Recibe estilos dark -->
</body>
```

---

## üé® **Pseudoclases para Estados Interactivos**  
```css
:host(:hover) {
  box-shadow: 0 0 10px steelblue;
}

:host(:focus-within) {
  outline: 2px solid #3a7bd5;
}

:host(.active) span {
  font-weight: bold;
}
```

---

## ‚ö° **Trucos Avanzados de Estilado**  

### **Combinando con ::slotted**  
```css
:host(.card) ::slotted(img) {
  border-radius: 50%;
}
```

### **Herencia Controlada**  
```css
:host {
  all: initial; /* Reset total */
  contain: content; /* Optimizaci√≥n de rendimiento */
}
```

### **Variables CSS en el Host**  
```css
:host {
  --main-color: #3a7bd5;
  background: var(--main-color);
}
```

---

## üìå **Tabla Resumen de Pseudoclases**

| Pseudoclase          | Ejemplo                  | Uso Principal                     |
|----------------------|--------------------------|-----------------------------------|
| `:host`             | `:host { display: block }` | Estilo base del custom element    |
| `:host()`           | `:host([disabled]) {...}` | Estilos condicionales             |
| `:host-context()`   | `:host-context(.dark) {...}` | Estilos seg√∫n contexto padre      |
| `:host(:hover)`     | `:host(:hover) {...}`     | Estados interactivos              |

---

## üöÄ **Ejemplo Completo Integrado**

```javascript
class MiBoton extends HTMLElement {
  constructor() {
    super();
    const shadow = this.attachShadow({mode: 'open'});
    shadow.innerHTML = `
      <style>
        :host {
          display: inline-block;
          padding: 12px 24px;
          background: var(--btn-color, #3a7bd5);
          color: white;
          border-radius: 4px;
          cursor: pointer;
          transition: all 0.3s;
        }
        
        :host([disabled]) {
          opacity: 0.5;
          cursor: not-allowed;
        }
        
        :host(:hover) {
          transform: translateY(-2px);
          box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        :host(.rounded) {
          border-radius: 50px;
        }
      </style>
      <slot>Bot√≥n</slot>
    `;
  }
}
customElements.define('mi-boton', MiBoton);
```

**Uso:**  
```html
<mi-boton>Normal</mi-boton>
<mi-boton disabled>No click</mi-boton>
<mi-boton class="rounded">Redondo</mi-boton>
```

---

## üí° **Consejos Profesionales**
1. **¬°Siempre define `display` en `:host`!** (evita sorpresas con el inline por defecto)  
2. Usa **variables CSS** para propiedades personalizables  
3. Combina `:host()` con **atributos** para control de estados  
4. **Prueba en m√∫ltiples navegadores** - Algunas pseudoclases tienen soporte variable  
